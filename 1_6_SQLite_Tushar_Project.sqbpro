<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/tusha/OneDrive/PGP_DSBA/#9 SQL/Project/New Orders.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2528"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="124"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="141"/><column index="5" value="124"/><column index="6" value="89"/><column index="7" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="1_6_SQLite_Tushar.sql">----- 01 -----
select PRODUCT_CLASS_CODE , PRODUCT_ID, PRODUCT_DESC, 
CASE
	when PRODUCT_CLASS_CODE = 2050 then (PRODUCT_PRICE + 2000)
	when PRODUCT_CLASS_CODE = 2051 then (PRODUCT_PRICE + 500)
	when PRODUCT_CLASS_CODE = 2052 then (PRODUCT_PRICE + 600)
ELSE PRODUCT_CLASS_CODE
END AS PRODUCT_PRICE
from PRODUCT
ORDER BY PRODUCT_CLASS_CODE DESC;
--------------


----- 02 -----
SELECT PRODUCT_CLASS.PRODUCT_CLASS_DESC, PRODUCT.PRODUCT_ID, PRODUCT.PRODUCT_DESC, PRODUCT.PRODUCT_QUANTITY_AVAIL, 
CASE
 WHEN PRODUCT.PRODUCT_CLASS_CODE in (2050,2053) THEN 
	CASE 
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL = 0 THEN &quot;Out of Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &lt;= 10 THEN &quot;Low Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &gt;= 11 AND PRODUCT.PRODUCT_QUANTITY_AVAIL &lt;= 30  THEN &quot;In Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &gt;= 31 THEN &quot;Enough Stock&quot;
	END
WHEN PRODUCT.PRODUCT_CLASS_CODE in (2052,2056) THEN 
	CASE
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL = 0 THEN &quot;Out of Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &lt;= 20 THEN &quot;Low Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &gt;= 21 AND PRODUCT.PRODUCT_QUANTITY_AVAIL &lt;= 80  THEN &quot;In Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &gt;= 81 THEN &quot;Enough Stock&quot;
	END
ELSE
	CASE 
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL = 0 THEN &quot;Out of Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &lt;= 15 THEN &quot;Low Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &gt;= 16 AND PRODUCT.PRODUCT_QUANTITY_AVAIL &lt;= 50  THEN &quot;In Stock&quot;
		WHEN PRODUCT.PRODUCT_QUANTITY_AVAIL &gt;= 51 THEN &quot;Enough Stock&quot;
	END
END AS 'Availiability Status'
FROM PRODUCT 
INNER JOIN PRODUCT_CLASS
ON PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE;
--------------

----- 03 -----
SELECT COUNTRY,count(CITY)
From ADDRESS
Where(COUNTRY NOT in(&quot;USA&quot;,&quot;Malaysia&quot;))
Group By (COUNTRY) 
HAVING (count(CITY)&gt;1)
ORDER BY count(CITY) DESC;
--------------


----- 04 -----
SELECT
	ONLINE_CUSTOMER.CUSTOMER_ID,
	(ONLINE_CUSTOMER.CUSTOMER_FNAME ||&quot; &quot;||ONLINE_CUSTOMER.CUSTOMER_LNAME) as CUSTOMER_NAME, 
	ADDRESS.CITY,
	ADDRESS.PINCODE,
	ORDER_ITEMS.ORDER_ID,
	PRODUCT_CLASS.PRODUCT_CLASS_DESC,
	PRODUCT.PRODUCT_DESC,
	(ORDER_ITEMS.PRODUCT_QUANTITY * PRODUCT.PRODUCT_PRICE) as SUB_TOTAL
FROM ONLINE_CUSTOMER, PRODUCT, ORDER_ITEMS, ORDER_HEADER, ADDRESS, PRODUCT_CLASS
WHERE 
	ORDER_ITEMS.PRODUCT_ID = PRODUCT.PRODUCT_ID AND 
	ORDER_ITEMS.ORDER_ID = ORDER_HEADER.ORDER_ID AND 
	ORDER_HEADER.CUSTOMER_ID = ONLINE_CUSTOMER.CUSTOMER_ID AND
	ONLINE_CUSTOMER.ADDRESS_ID = ADDRESS.ADDRESS_ID AND
	PRODUCT.PRODUCT_CLASS_CODE = PRODUCT_CLASS.PRODUCT_CLASS_CODE AND
	ORDER_HEADER.ORDER_STATUS = &quot;Shipped&quot; AND
	ADDRESS.PINCODE NOT like '%0%'
ORDER BY CUSTOMER_NAME, SUB_TOTAL;
--------------


----- 05 -----
SELECT 
    ORDER_ITEMS.PRODUCT_ID, 
    PRODUCT.PRODUCT_DESC, 
    max(ORDER_ITEMS.PRODUCT_QUANTITY) as PROD_QUANTITY, 
    sum(ORDER_ITEMS.PRODUCT_QUANTITY) as ORDER_TOTAL_QUANTITY
FROM
	(SELECT t.ORDER_ID, max(t.total)
	FROM
		(SELECT 
			ORDER_ITEMS.ORDER_ID, sum(ORDER_ITEMS.PRODUCT_QUANTITY) total
		FROM 
			ORDER_ITEMS 
		WHERE 
			ORDER_ITEMS.ORDER_ID IN 
            (SELECT 
                ORDER_ITEMS.ORDER_ID 
            FROM ORDER_ITEMS 
            WHERE 
                ORDER_ITEMS.PRODUCT_ID = 201) 
		    GROUP BY ORDER_ITEMS.ORDER_ID) as t) as final, 
        ORDER_ITEMS, 
        PRODUCT
WHERE 
	ORDER_ITEMS.ORDER_ID = final.ORDER_ID AND
	PRODUCT.PRODUCT_ID = ORDER_ITEMS.PRODUCT_ID;
--------------


----- 06 -----
SELECT
	ONLINE_CUSTOMER.CUSTOMER_ID,
	(ONLINE_CUSTOMER.CUSTOMER_FNAME || ' ' || ONLINE_CUSTOMER.CUSTOMER_LNAME) as CUSTOMER_NAME,
	ONLINE_CUSTOMER.CUSTOMER_EMAIL,
	final.ORDER_ID,
	final.PRODUCT_ID,
	final.PRODUCT_DESC,
	final.PRODUCT_QUANTITY,
	(final.PRODUCT_QUANTITY * final.PRODUCT_PRICE) as SUB_TOTAL
FROM
	ONLINE_CUSTOMER 
	LEFT JOIN 
		(SELECT 
			ORDER_ITEMS.ORDER_ID, 
			ORDER_HEADER.CUSTOMER_ID, 
			ORDER_ITEMS.PRODUCT_ID, 
			ORDER_ITEMS.PRODUCT_QUANTITY, 
			PRODUCT.PRODUCT_PRICE, PRODUCT.PRODUCT_DESC 
		FROM ORDER_ITEMS, ORDER_HEADER, PRODUCT 
		WHERE ORDER_ITEMS.ORDER_ID = ORDER_HEADER.ORDER_ID AND ORDER_ITEMS.PRODUCT_ID = PRODUCT.PRODUCT_ID) final
	ON ONLINE_CUSTOMER.CUSTOMER_ID = final.CUSTOMER_ID;
--------------</sql><current_tab id="0"/></tab_sql></sqlb_project>
